<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd"
	default-lazy-init="true">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/jdbc.properties</value>
			</list>
		</property>
	</bean>

	<bean id="datasource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 数据库连接池保持的最小连接数 -->
		<!-- <property name="minIdle" value="5" /> -->
		<!-- 数据库连接池保持的最大连接数 -->
		<!-- <property name="maxIdle" value="30" /> -->
		<!-- 当数据库连接因为某种原因断掉之后，再重新从连接池中拿另外一个连接时实际上这个连接可能 已经无效，所以为了确保所拿到的连接全都有效需要在获取连接，返回连接以及连接空闲时进行 
			有效性验证 下面3个设置为ture时进行验证，默认为false -->
		<!-- 取得连接时是否进行有效性验证 -->
		<!--<property name="testOnBorrow" value="true" /> -->
		<!-- 返回连接时是否进行有效性验证 -->
		<!--<property name="testOnReturn" value="true" /> -->
		<!-- 连接空闲时是否进行有效性验证 -->
		<!--<property name="testWhileIdle" value="true" /> -->
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="datasource" />
		<!-- 注意：我用的是Annotation的方式配置的Hibernate，这里的property的name是annotatedClasses -->
		<property name="packagesToScan">
			<list>
				<value>com.nci.syncengine.wsbg.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<!-- 设置Hibernate方言 -->
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<!-- 是否打印sql -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 格式化sql -->
				<prop key="hibernate.format_sql">false</prop>
				<!-- 是否自动更新表 -->
<!-- 				<prop key="hibernate.hbm2ddl.auto">update</prop> -->
				<prop key="hibernate.current_session_context_class">thread</prop>
				<!-- 最大抓取深度，如果为0，则关闭默认的外连接抓取。建议值为0-3 -->
				<!-- <prop key="hibernate.max_fetch_depth">1</prop> -->
				<!-- 用于生成有助于调试的注释信息，默认为关闭 -->
				<prop key="hibernate.use_sql_comments">true</prop>
				<!-- <prop key="hibernate.cache.use_query_cache">true</prop> -->
				<!-- <prop key="hibernate.cache.use_second_level_cache">true</prop> -->
				<!-- <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop> -->

			</props>
		</property>
		<property name="cacheProvider">
			<ref local="cacheProvider" />
		</property>
	</bean>

	<bean id="cacheProvider" class="net.sf.ehcache.hibernate.EhCacheProvider">
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
		<!-- <property name="cacheQueries" value="true" /> -->
	</bean>
	
	
	<!-- 定时任务类 -->
	<task:scheduled-tasks> 
<!--         <task:scheduled ref="taskJob" method="syncUser" cron="0 0 0 * * ?"/>  --><!-- 每天0点运行一次 -->
<!--         <task:scheduled ref="taskJob" method="syncDbsxAndTztg" cron="0 0/10 0-6 * * ?"/>  --><!-- 每天0点到7点每隔10分钟运行一次 -->
<!--         <task:scheduled ref="taskJob" method="syncDbsxAndTztg" cron="0 0/2 7-19 * * ?"/>  --><!-- 每天7点到19点每隔2分钟运行一次 -->
<!--         <task:scheduled ref="taskJob" method="syncDbsxAndTztg" cron="0 0/10 20-23 * * ?"/>  --><!-- 每天19点到24点每隔10分钟运行一次 -->
        <task:scheduled ref="taskJob" method="test" cron="0 30 11 * * ?"/> <!-- 每天7点到19点每隔10秒运行一次 -->
	</task:scheduled-tasks>

	<context:annotation-config />
	<context:component-scan base-package="com.nci.syncengine" />
	<!--启动注解用注解来管理事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!--  开启这个配置，spring才能识别@Scheduled注解   -->
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>
    <task:scheduler id="qbScheduler" pool-size="10"/>
</beans>